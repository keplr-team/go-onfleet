// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	onfleet "github.com/keplr-team/go-onfleet/onfleet"
	mock "github.com/stretchr/testify/mock"
)

// OrganizationServiceInterface is an autogenerated mock type for the OrganizationServiceInterface type
type OrganizationServiceInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx
func (_m *OrganizationServiceInterface) Get(ctx context.Context) (*onfleet.Organization, error) {
	ret := _m.Called(ctx)

	var r0 *onfleet.Organization
	if rf, ok := ret.Get(0).(func(context.Context) *onfleet.Organization); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*onfleet.Organization)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOrganizationServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrganizationServiceInterface creates a new instance of OrganizationServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrganizationServiceInterface(t mockConstructorTestingTNewOrganizationServiceInterface) *OrganizationServiceInterface {
	mock := &OrganizationServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
