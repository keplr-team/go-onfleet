// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	onfleet "github.com/keplr-team/go-onfleet/onfleet"
	mock "github.com/stretchr/testify/mock"
)

// HubsServiceInterface is an autogenerated mock type for the HubsServiceInterface type
type HubsServiceInterface struct {
	mock.Mock
}

// List provides a mock function with given fields: ctx
func (_m *HubsServiceInterface) List(ctx context.Context) ([]onfleet.Hub, error) {
	ret := _m.Called(ctx)

	var r0 []onfleet.Hub
	if rf, ok := ret.Get(0).(func(context.Context) []onfleet.Hub); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]onfleet.Hub)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewHubsServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewHubsServiceInterface creates a new instance of HubsServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHubsServiceInterface(t mockConstructorTestingTNewHubsServiceInterface) *HubsServiceInterface {
	mock := &HubsServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
